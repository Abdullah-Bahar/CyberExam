
-----------------------------------

	About the Javascript

* Bazı Temel JavaScript Olay İşleyicileri :

	- onload : Sayfa yüklendiğinde tetiklenir. Örneğin:
		<body onload="alert('Cybersecurity kariyerine başlamaya hazır mısın?')">

	- onmouseover : Fare imleci belirli bir öğenin üzerine geldiğinde tetiklenir. Örneğin:
		<a onmouseover="alert('XSS Saldırısı')">Link</a>

	- onerror : Bir hata oluştuğunda (örneğin bir resim yüklenemediğinde) tetiklenir. Örneğin:
		<img src="http://example.com/not_exist.png" onerror="alert('XSS')">

-----------------------------------

	XSS (Cross-Site Scripting) Nedir?

* XSS, istemciden alınan girdilerin doğrulama yapılmadan veya yeterli kontrol uygulanmadan veritabanında işlenmesi ya da 
kullanıcıya gösterilmesi durumunda ortaya çıkan bir güvenlik açığıdır. Bu durum, web uygulamalarına kullanıcı tarafından 
girilen veri (HTTP başlık bilgisi, giriş alanları vb.) işlenirken oluşabilir.

	
* XSS Açığının Potansiyel Etkileri
	- Oturum Çerezlerine Erişim	: Kullanıcı oturum bilgilerini içeren çerezler çalınabilir.
	- Kimlik Avı (Phishing)		: Kullanıcıların hassas bilgilerini toplamak için sahte sayfalar yüklenebilir.
	- Kritik Veri Çalınması		: Kullanıcılara ait hassas bilgiler ele geçirilebilir.
	- Tarayıcı Açıklarıyla Kombinasyon	: Tarayıcıdaki başka bir açıkla birleştirildiğinde kullanıcının bilgisayarı 
	tamamen ele geçirilebilir.
	- Zararlı Yazılım Yükleme	: Kullanıcının sistemine kötü amaçlı yazılımlar indirilebilir.

-----------------------------------

	XSS Türleri

1. Stored XSS (Kalıcı XSS)
	- Malicious script, hedef sunucuda (genellikle veritabanında) kalıcı olarak saklanır ve kullanıcılar 
	her bu içeriği görüntülediğinde çalışır.

	- Örnek : Bir bloga yorum olarak zararlı bir JavaScript kodu eklenir. Kod, yorum veritabanına kaydedilir ve her kullanıcı
	bu yorumu gördüğünde çalışır.

2. Reflected XSS (Yansımalı XSS)
	- Malicious script, sunucudan dönen bir yanıt içinde yansıtılır ve kullanıcı tarayıcısında çalıştırılır. 
	Payload (zararlı kod), sunucuda saklanmaz.

	- Örnek : Saldırgan, zararlı kod içeren bir URL oluşturur ve kurbana gönderir.
	Kullanıcı bağlantıya tıkladığında zararlı kod, sunucunun yanıtıyla birlikte kullanıcı tarayıcısında çalışır.

3. DOM-Based XSS (Belge Nesne Modeli XSS)
	- Zafiyet sunucudan ziyade istemci tarafında (JavaScript kodlarında) bulunur. Zararlı veri, istemcide çalıştırılır.

	- Örnek: Bir web sayfası, URL parametrelerinden aldığı verileri dinamik olarak içerik olarak gösteriyor. 
	Eğer bu veriler doğrulanmazsa zararlı kod doğrudan tarayıcıda çalıştırılır.

4. Self-XSS (Kendi Kendine XSS)
	- Saldırgan, kurbanı kötü niyetli bir JavaScript kodunu kendi tarayıcı konsolunda çalıştırmaya ikna eder. 
	Bu tür saldırı genellikle sosyal mühendislik ile gerçekleştirilir.

	- Örnek : Saldırgan, kurbana tarayıcı konsolunda belirli bir kodu çalıştırarak "özel bir özellik" açabileceğini söyler.

5. Mutated XSS (M-XSS)
	- Payload, tarayıcı veya sunucu tarafından işlenirken değişime uğrar (mutasyon). 
	Başlangıçta zararsız gibi görünen bir veri, işleme sırasında çalıştırılabilir hale gelir.

	- Örnek : Saldırganın girdiği zararsız bir metin, tarayıcı tarafında işlenirken zararlı JavaScript'e dönüşür.

6. Blind XSS (Kör XSS)
	- Payload hemen değil, daha sonra bir sistem yöneticisi veya bir yetkili kullanıcı tarafından görüntülendiğinde tetiklenir.

	- Örnek: Bir geri bildirim formuna zararlı kod eklenir. Bu kod, yalnızca bir yönetici geri bildirimi incelediğinde çalışır.

7. Second-Order XSS (İkinci Derece XSS)
	- Payload, sistemde saklanır ancak başka bir işlemle tetiklenene kadar çalıştırılmaz.

	- Örnek: Saldırgan, bir kayıt formuna zararlı veri girer. Bu veri, bir yönetici tarafından düzenleme yapıldığında çalışır.

-----------------------------------

	BASIC XSS DENEMELERİ

* URL'ni sonuna bunları ekleyip alert çalışırmaya çalışıyoruz.

	- <script>alert('1')</script>
	- %3CScript%3Ealert(1)%3C/Script%3E
	- <Scr<script>ipt>alert(1)</Scr</script>ipt>
	- <img src="missing" onerror="alert(1)" />
	- <script>eval(String.fromCharCode(97,108,101,114,116,40,49,41))</script>
	- language=name=";alert(1);var language="

-----------------------------------

* view-source:http://example.com
	- Kaynak kod sayfasını açar

-----------------------------------
